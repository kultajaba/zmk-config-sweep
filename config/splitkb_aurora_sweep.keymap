/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        lenter {
            bindings = <&kp ENTER>;
            key-positions = <23 24>;
            timeout-ms = <200>;
        };

        escape {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
            timeout-ms = <200>;
        };

        num-lk-toggle {
            bindings = <&tog 2>;
            key-positions = <4 3>;
            timeout-ms = <200>;
        };

        ldel {
            bindings = <&kp DELETE>;
            key-positions = <13 14>;
        };

        dot {
            bindings = <&kp KP_DOT>;
            key-positions = <20 21>;
            layers = <2>;
        };

        num-shift {
            bindings = <&mo 2>;
            key-positions = <31 32>;
        };
    };

    macros {
        super2: super2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N2 &kp KP_NUMBER_5 &kp KP_NUMBER_3>,
                <&macro_release>,
                <&kp LALT>;

            label = "SUPER2";
            wait-ms = <30>;
            tap-ms = <30>;
        };

        super3: SUPER3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_NUMBER_1 &kp KP_NUMBER_7 &kp KP_N9>,
                <&macro_release>,
                <&kp LALT>;

            label = "SUPER3";
            wait-ms = <30>;
            tap-ms = <30>;
        };

        supero: SUPERO {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_NUMBER_1 &kp KP_NUMBER_7 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;

            label = "SUPERO";
            wait-ms = <30>;
            tap-ms = <30>;
        };

        sym2combo: sym2combo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mo 3 &kp LSHIFT>;
            label = "SYM2COMBO";
        };
    };

    behaviors {
        mo_tog_behavior: mo_tog_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_TOG_BEHAVIOR";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        qs_c: qs_c {
            compatible = "zmk,behavior-mod-morph";
            label = "QS_C";
            bindings = <&kp LC(C)>, <&kp C>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LCTL|MOD_LALT|MOD_LGUI)>;
            keep-mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI)>;
        };

        qs_v: qs_v {
            compatible = "zmk,behavior-mod-morph";
            label = "QS_V";
            bindings = <&kp LC(V)>, <&kp V>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LCTL|MOD_LALT|MOD_LGUI)>;
            keep-mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI)>;
        };

        qs_z: qs_z {
            compatible = "zmk,behavior-mod-morph";
            label = "QS_Z";
            bindings = <&kp LC(Z)>, <&kp Z>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LCTL|MOD_LALT|MOD_LGUI)>;
            keep-mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI)>;
        };

        qs_x: qs_x {
            compatible = "zmk,behavior-mod-morph";
            label = "QS_X";
            bindings = <&kp LC(X)>, <&kp X>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LCTL|MOD_LALT|MOD_LGUI)>;
            keep-mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI)>;
        };

        qs_y: qs_y {
            compatible = "zmk,behavior-mod-morph";
            label = "QS_Y";
            bindings = <&kp LC(Y)>, <&kp Y>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LCTL|MOD_LALT|MOD_LGUI)>;
            keep-mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI)>;
        };

        qs_1: qs_1 {
            compatible = "zmk,behavior-mod-morph";
            label = "QS_1";
            bindings = <&kp KP_N1>, <&kp NUMBER_1>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LCTL)>;
            keep-mods = <(MOD_LSFT|MOD_LCTL)>;
        };

        qs_2: qs_2 {
            compatible = "zmk,behavior-mod-morph";
            label = "QS_2";
            bindings = <&kp KP_N2>, <&kp NUMBER_2>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LCTL)>;
            keep-mods = <(MOD_LSFT|MOD_LCTL)>;
        };

        qs_3: qs_3 {
            compatible = "zmk,behavior-mod-morph";
            label = "QS_3";
            bindings = <&kp KP_N3>, <&kp NUMBER_3>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LCTL)>;
            keep-mods = <(MOD_LSFT|MOD_LCTL)>;
        };

        qs_4: qs_4 {
            compatible = "zmk,behavior-mod-morph";
            label = "QS_4";
            bindings = <&kp KP_N4>, <&kp NUMBER_4>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LCTL)>;
            keep-mods = <(MOD_LSFT|MOD_LCTL)>;
        };

        qs_5: qs_5 {
            compatible = "zmk,behavior-mod-morph";
            label = "QS_5";
            bindings = <&kp KP_N5>, <&kp NUMBER_5>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LCTL)>;
            keep-mods = <(MOD_LSFT|MOD_LCTL)>;
        };

        qs_6: qs_6 {
            compatible = "zmk,behavior-mod-morph";
            label = "QS_6";
            bindings = <&kp KP_N6>, <&kp N6>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LCTL)>;
            keep-mods = <(MOD_LSFT|MOD_LCTL)>;
        };

        qs_7: qs_7 {
            compatible = "zmk,behavior-mod-morph";
            label = "QS_7";
            bindings = <&kp KP_NUMBER_7>, <&kp N7>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LCTL)>;
            keep-mods = <(MOD_LSFT|MOD_LCTL)>;
        };

        qs_8: qs_8 {
            compatible = "zmk,behavior-mod-morph";
            label = "QS_8";
            bindings = <&kp KP_N8>, <&kp N8>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LCTL)>;
            keep-mods = <(MOD_LSFT|MOD_LCTL)>;
        };

        qs_9: qs_9 {
            compatible = "zmk,behavior-mod-morph";
            label = "QS_9";
            bindings = <&kp KP_N9>, <&kp N9>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LCTL)>;
            keep-mods = <(MOD_LSFT|MOD_LCTL)>;
        };

        qs_0: qs_0 {
            compatible = "zmk,behavior-mod-morph";
            label = "QS_0";
            bindings = <&kp KP_N0>, <&kp NUMBER_0>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LCTL)>;
            keep-mods = <(MOD_LSFT|MOD_LCTL)>;
        };

        kp_tog_behavior: kp_tog_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_TOG_BEHAVIOR";
            bindings = <&kp>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        mod_trans_behaviour: mod_trans_behaviour {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TRANS_BEHAVIOUR";
            bindings = <&kp>, <&trans>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
        };

        qs_dot_com: qs_dot_com {
            compatible = "zmk,behavior-mod-morph";
            label = "QS_DOT_COM";
            bindings = <&kp COMMA>, <&kp PERIOD>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        qs_slash: qs_slash {
            compatible = "zmk,behavior-mod-morph";
            label = "QS_SLASH";
            bindings = <&kp KP_DIVIDE>, <&kp ESCAPE>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        qs_star: qs_star {
            compatible = "zmk,behavior-mod-morph";
            label = "QS_STAR";
            bindings = <&kp KP_MULTIPLY>, <&kp BACKSPACE>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        mod_mod_star: mod_mod_star {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_MOD_STAR";
            bindings = <&kp>, <&qs_star>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        kp_sk_behavior: kp_sk_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_SK_BEHAVIOR";
            bindings = <&kp>, <&sk>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp SQT  &kp D      &kp Y  &kp P  &kp W    &kp J  &kp K  &kp U      &kp R       &kp SEMI
&kp A    &kp S      &kp E  &kp T  &kp G    &kp H  &kp N  &kp I      &kp L       &kp O
&kp Z    &kp X      &kp C  &kp V  &kp B    &kp F  &kp M  &kp COMMA  &kp PERIOD  &kp Q
&mo 5    &kp SPACE                                                  &kp RSHIFT  &mo 3
            >;
        };

        qwerty_layer {
            bindings = <
&kp Q   &kp W   &kp E   &kp R   &kp T     &kp Y   &kp U   &kp I   &kp O   &kp P
&trans  &trans  &kp D   &kp F   &trans    &trans  &kp J   &kp K   &trans  &kp SEMI
&trans  &trans  &trans  &trans  &trans    &kp N   &trans  &trans  &trans  &kp SQT
&trans  &trans                                                    &trans  &trans
            >;
        };

        num-lk_layer {
            bindings = <
&kp KP_SLASH     &kp N7        &kp N8        &kp N9        &kp KP_PLUS     &kp ESC    &kp HOME        &kp UP_ARROW  &kp END    &kp PG_UP
&kp KP_MULTIPLY  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0          &kp TAB    &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &kp DEL
&kp KP_COMMA     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_MINUS    &kp ENTER  &kp BACKSPACE   &kp INS       &kp K_APP  &kp PG_DN
&trans           &trans                                                                                             &trans     &trans
            >;
        };

        sym_layer {
            bindings = <
&kp GRAVE                &kp LS(NUMBER_2)      &kp HASH       &kp LC(LA(NUMBER_3))   &kp PERCENT    &kp LS(NUMBER_6)   &kp LS(N7)         &kp LS(N8)     &kp LS(N9)     &kp LS(N0)
&kp LC(LA(NON_US_BSLH))  &kp LC(LA(NUMBER_4))  &kp LC(LA(E))  &kp LS(RIGHT_BRACKET)  &supero        &kp EQUAL          &kp EXCL           &kp LS(MINUS)  &kp SLASH      &kp BACKSLASH
&kp NON_US_BSLH          &kp LS(NON_US_BSLH)   &super2        &super3                &none          &kp RIGHT_BRACKET  &kp LC(LA(MINUS))  &none          &kp LS(SLASH)  &kp LS(BACKSLASH)
&trans                   &mo 4                                                                                                                           &none          &trans
            >;
        };

        sym2_layer {
            bindings = <
&kp LS(GRAVE)  &kp LC(LA(NUMBER_2))  &none  &none  &none    &none                      &kp LC(LA(N7))  &kp LC(LA(N8))  &kp LC(LA(N9))  &kp LC(LA(N0))
&none          &none                 &none  &none  &none    &kp LS(EQUAL)              &none           &none           &none           &none
&none          &none                 &none  &none  &none    &kp LC(LA(RIGHT_BRACKET))  &none           &none           &none           &none
&none          &trans                                                                                                  &none           &trans
            >;
        };

        nav-sq_layer {
            bindings = <
&kp ESCAPE                     &kp O                        &qs_y                      &kp R                      &kp F    &kp ESC    &kp HOME        &kp UP_ARROW  &kp END    &kp PG_UP
&kp_sk_behavior LSHIFT LSHIFT  &kp_sk_behavior LCTRL LCTRL  &kp_sk_behavior LWIN LWIN  &kp_sk_behavior LALT LALT  &kp N    &kp TAB    &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &kp DEL
&qs_z                          &qs_x                        &qs_c                      &qs_v                      &kp H    &kp ENTER  &kp BACKSPACE   &kp INS       &kp K_APP  &kp PG_DN
&trans                         &none                                                                                                                                &kp SPACE  &trans
            >;
        };

        func_layer {
            bindings = <
&tog 1        &mt C_REWIND C_PREV  &kp C_PP    &mt C_FAST_FORWARD C_NEXT  &bt BT_NXT    &kp PRINTSCREEN  &kp F1  &kp F2   &kp F3   &kp F4
&kp LSHIFT    &kp LCTRL            &kp LWIN    &kp LALT                   &bt BT_PRV    &kp CAPSLOCK     &kp F5  &kp F6   &kp F7   &kp F8
&out OUT_TOG  &kp C_VOL_DN         &kp C_MUTE  &kp C_VOL_UP               &bt BT_CLR    &kp SCROLLLOCK   &kp F9  &kp F10  &kp F11  &kp F12
&trans        &none                                                                                                       &none    &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        function {
            if-layers = <3 5>;
            then-layer = <6>;
        };
    };
};
